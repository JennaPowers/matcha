{"ast":null,"code":"var _jsxFileName = \"/Users/jennapowers/react/matcha/src/components/UI/HealthModal.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport RegionModalContent from \"../Regions/RegionModalContent\";\nimport placeholderImg from \"../../images/cherryblossom1.png\";\nimport styles from \"./RegionsModal.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegionsModal = props => {\n  _s();\n  const [selectedBenefit, setSelectedBenefit] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const fetchRegionData = async () => {\n    const response = await fetch(\"https://myikigai-99b57-default-rtdb.firebaseio.com/health.json\");\n    if (!response.ok) {\n      console.log(\"error in fetching region\");\n    }\n    const data = await response.json();\n    const transformedRegions = [];\n    for (const regionKey in data) {\n      transformedRegions.push({\n        id: regionKey,\n        name: data[regionKey].name,\n        flavor: data[regionKey].flavor\n      });\n    }\n    const selectedRegion = transformedRegions.find(region => region.name === props.regionName);\n    setSelectedRegion(selectedRegion);\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    fetchRegionData();\n  }, [fetchRegionData]);\n  const loadingContent = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.loading,\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 26\n  }, this);\n  const content = /*#__PURE__*/_jsxDEV(RegionModalContent, {\n    name: selectedRegion.name,\n    img: placeholderImg,\n    flavor: selectedRegion.flavor\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: props.onClose,\n      children: [!isLoading && content, isLoading && loadingContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(RegionsModal, \"kDIZoWsIqPwUgikJVCVV7wjZVrM=\");\n_c = RegionsModal;\nexport default RegionsModal;\nvar _c;\n$RefreshReg$(_c, \"RegionsModal\");","map":{"version":3,"names":["React","Fragment","useState","useEffect","Modal","RegionModalContent","placeholderImg","styles","RegionsModal","props","selectedBenefit","setSelectedBenefit","isLoading","setIsLoading","fetchRegionData","response","fetch","ok","console","log","data","json","transformedRegions","regionKey","push","id","name","flavor","selectedRegion","find","region","regionName","setSelectedRegion","loadingContent","loading","content","onClose"],"sources":["/Users/jennapowers/react/matcha/src/components/UI/HealthModal.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\n\nimport Modal from \"../UI/Modal\";\nimport RegionModalContent from \"../Regions/RegionModalContent\";\n\nimport placeholderImg from \"../../images/cherryblossom1.png\";\nimport styles from \"./RegionsModal.module.css\";\n\nconst RegionsModal = (props) => {\n  const [selectedBenefit, setSelectedBenefit] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetchRegionData = async () => {\n    const response = await fetch(\n      \"https://myikigai-99b57-default-rtdb.firebaseio.com/health.json\"\n    );\n\n    if (!response.ok) {\n      console.log(\"error in fetching region\");\n    }\n\n    const data = await response.json();\n\n    const transformedRegions = [];\n\n    for (const regionKey in data) {\n      transformedRegions.push({\n        id: regionKey,\n        name: data[regionKey].name,\n        flavor: data[regionKey].flavor,\n      });\n    }\n\n    const selectedRegion = transformedRegions.find(\n      (region) => region.name === props.regionName\n    );\n    setSelectedRegion(selectedRegion);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchRegionData();\n  }, [fetchRegionData]);\n\n  const loadingContent = <div className={styles.loading}>Loading...</div>;\n\n  const content = (\n    <RegionModalContent\n      name={selectedRegion.name}\n      img={placeholderImg}\n      flavor={selectedRegion.flavor}\n    />\n  );\n\n  return (\n    <Fragment>\n      <Modal onClose={props.onClose}>\n        {!isLoading && content}\n        {isLoading && loadingContent}\n      </Modal>\n    </Fragment>\n  );\n};\n\nexport default RegionsModal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE5D,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,kBAAkB,MAAM,+BAA+B;AAE9D,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,MAAM,MAAM,2BAA2B;AAAC;AAE/C,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAA;EAC9B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMY,eAAe,GAAG,YAAY;IAClC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAAgE,CACjE;IAED,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MAChBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACzC;IAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;IAElC,MAAMC,kBAAkB,GAAG,EAAE;IAE7B,KAAK,MAAMC,SAAS,IAAIH,IAAI,EAAE;MAC5BE,kBAAkB,CAACE,IAAI,CAAC;QACtBC,EAAE,EAAEF,SAAS;QACbG,IAAI,EAAEN,IAAI,CAACG,SAAS,CAAC,CAACG,IAAI;QAC1BC,MAAM,EAAEP,IAAI,CAACG,SAAS,CAAC,CAACI;MAC1B,CAAC,CAAC;IACJ;IAEA,MAAMC,cAAc,GAAGN,kBAAkB,CAACO,IAAI,CAC3CC,MAAM,IAAKA,MAAM,CAACJ,IAAI,KAAKjB,KAAK,CAACsB,UAAU,CAC7C;IACDC,iBAAiB,CAACJ,cAAc,CAAC;IACjCf,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAEDV,SAAS,CAAC,MAAM;IACdW,eAAe,EAAE;EACnB,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErB,MAAMmB,cAAc,gBAAG;IAAK,SAAS,EAAE1B,MAAM,CAAC2B,OAAQ;IAAA,UAAC;EAAU;IAAA;IAAA;IAAA;EAAA,QAAM;EAEvE,MAAMC,OAAO,gBACX,QAAC,kBAAkB;IACjB,IAAI,EAAEP,cAAc,CAACF,IAAK;IAC1B,GAAG,EAAEpB,cAAe;IACpB,MAAM,EAAEsB,cAAc,CAACD;EAAO;IAAA;IAAA;IAAA;EAAA,QAEjC;EAED,oBACE,QAAC,QAAQ;IAAA,uBACP,QAAC,KAAK;MAAC,OAAO,EAAElB,KAAK,CAAC2B,OAAQ;MAAA,WAC3B,CAACxB,SAAS,IAAIuB,OAAO,EACrBvB,SAAS,IAAIqB,cAAc;IAAA;MAAA;MAAA;MAAA;IAAA;EACtB;IAAA;IAAA;IAAA;EAAA,QACC;AAEf,CAAC;AAAC,GAtDIzB,YAAY;AAAA,KAAZA,YAAY;AAwDlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}